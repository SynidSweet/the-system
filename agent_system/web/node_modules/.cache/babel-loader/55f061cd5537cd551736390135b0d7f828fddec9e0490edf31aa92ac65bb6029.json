{"ast":null,"code":"import _objectSpread from \"/code/personal/the-system/agent_system/web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from '@babel/runtime/helpers/extends';\nimport React from 'react';\nimport wrapHandlers from '../wrapHandlers.js';\nfunction Node(props) {\n  function getTransform() {\n    return \"translate(\".concat(props.x, \", \").concat(props.y, \")\");\n  }\n  let offset = 0.5;\n  let nodePropsWithDefaults = props.nodeProps;\n  switch (props.shape) {\n    case 'circle':\n      nodePropsWithDefaults = _objectSpread({\n        r: 5\n      }, nodePropsWithDefaults);\n      offset += nodePropsWithDefaults.r;\n      break;\n    case 'image':\n    case 'rect':\n      nodePropsWithDefaults = _objectSpread({\n        height: 10,\n        width: 10\n      }, nodePropsWithDefaults);\n      nodePropsWithDefaults = _objectSpread({\n        x: -nodePropsWithDefaults.width / 2,\n        y: -nodePropsWithDefaults.height / 2\n      }, nodePropsWithDefaults);\n      offset += nodePropsWithDefaults.width / 2;\n      break;\n  }\n  if (props.direction === 'rtl') {\n    offset = -offset;\n  }\n  const wrappedNodeProps = wrapHandlers(nodePropsWithDefaults, props[props.keyProp]);\n  const wrappedGProps = wrapHandlers(props.gProps, props[props.keyProp]);\n  const wrappedTextProps = wrapHandlers(props.textProps, props[props.keyProp]);\n  const label = typeof props[props.labelProp] === 'string' ? /*#__PURE__*/React.createElement(\"text\", _extends({\n    dx: offset,\n    dy: 5\n  }, wrappedTextProps), props[props.labelProp]) : /*#__PURE__*/React.createElement(\"g\", _extends({\n    transform: \"translate(\".concat(offset, \", 5)\")\n  }, wrappedTextProps), props[props.labelProp]);\n  return /*#__PURE__*/React.createElement(\"g\", _extends({}, wrappedGProps, {\n    transform: getTransform(),\n    direction: props.direction === 'rtl' ? 'rtl' : null\n  }), /*#__PURE__*/React.createElement(props.shape, wrappedNodeProps), label);\n}\nexport { Node as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}