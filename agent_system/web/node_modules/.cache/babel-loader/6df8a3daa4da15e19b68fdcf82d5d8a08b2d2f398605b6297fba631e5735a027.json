{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/system.petter.ai/agent_system/web/src/components/ControlPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlPanel = ({\n  systemConfig,\n  onUpdateConfig,\n  selectedThread,\n  pausedTasks,\n  onContinueTask\n}) => {\n  _s();\n  const [localConfig, setLocalConfig] = useState(systemConfig);\n  const handleMaxTasksChange = value => {\n    const newConfig = {\n      ...localConfig,\n      max_parallel_tasks: parseInt(value)\n    };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n  const handleStepModeToggle = enabled => {\n    const newConfig = {\n      ...localConfig,\n      step_mode: enabled\n    };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n  const handleThreadStepMode = enabled => {\n    const newThreads = enabled ? [...localConfig.step_mode_threads, selectedThread] : localConfig.step_mode_threads.filter(id => id !== selectedThread);\n    const newConfig = {\n      ...localConfig,\n      step_mode_threads: newThreads\n    };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n  const isThreadInStepMode = selectedThread && (localConfig.step_mode || localConfig.step_mode_threads.includes(selectedThread));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"System Controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"control-label\",\n        children: [\"Max Parallel Tasks\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: localConfig.max_parallel_tasks,\n          onChange: e => handleMaxTasksChange(e.target.value),\n          className: \"slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider-value\",\n          children: localConfig.max_parallel_tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"control-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localConfig.step_mode,\n          onChange: e => handleStepModeToggle(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Global Step Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), selectedThread && !localConfig.step_mode && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"control-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: localConfig.step_mode_threads.includes(selectedThread),\n          onChange: e => handleThreadStepMode(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Step Mode for Current Thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), pausedTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-section paused-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Paused Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), pausedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paused-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-info\",\n          children: [\"Task \", task.task_id, \" - \", task.agent_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"continue-button\",\n          onClick: () => onContinueTask(task.task_id),\n          children: \"Continue \\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, task.task_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-info\",\n      children: [isThreadInStepMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item step-active\",\n        children: \"\\u23F8\\uFE0F Step mode active for this thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [\"Press \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n          children: \"Ctrl+Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), \" to submit new task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlPanel, \"lfbFRgCpfRB6uHMOoQJskcs1Vvc=\");\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ControlPanel","systemConfig","onUpdateConfig","selectedThread","pausedTasks","onContinueTask","_s","localConfig","setLocalConfig","handleMaxTasksChange","value","newConfig","max_parallel_tasks","parseInt","handleStepModeToggle","enabled","step_mode","handleThreadStepMode","newThreads","step_mode_threads","filter","id","isThreadInStepMode","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","e","target","checked","length","map","task","task_id","agent_name","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/system.petter.ai/agent_system/web/src/components/ControlPanel.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ControlPanel = ({ \n  systemConfig, \n  onUpdateConfig, \n  selectedThread, \n  pausedTasks,\n  onContinueTask \n}) => {\n  const [localConfig, setLocalConfig] = useState(systemConfig);\n\n  const handleMaxTasksChange = (value) => {\n    const newConfig = { ...localConfig, max_parallel_tasks: parseInt(value) };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n\n  const handleStepModeToggle = (enabled) => {\n    const newConfig = { ...localConfig, step_mode: enabled };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n\n  const handleThreadStepMode = (enabled) => {\n    const newThreads = enabled \n      ? [...localConfig.step_mode_threads, selectedThread]\n      : localConfig.step_mode_threads.filter(id => id !== selectedThread);\n    \n    const newConfig = { ...localConfig, step_mode_threads: newThreads };\n    setLocalConfig(newConfig);\n    onUpdateConfig(newConfig);\n  };\n\n  const isThreadInStepMode = selectedThread && (\n    localConfig.step_mode || localConfig.step_mode_threads.includes(selectedThread)\n  );\n\n  return (\n    <div className=\"control-panel\">\n      <h3>System Controls</h3>\n      \n      <div className=\"control-section\">\n        <label className=\"control-label\">\n          Max Parallel Tasks\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={localConfig.max_parallel_tasks}\n            onChange={(e) => handleMaxTasksChange(e.target.value)}\n            className=\"slider\"\n          />\n          <span className=\"slider-value\">{localConfig.max_parallel_tasks}</span>\n        </label>\n      </div>\n\n      <div className=\"control-section\">\n        <label className=\"control-toggle\">\n          <input\n            type=\"checkbox\"\n            checked={localConfig.step_mode}\n            onChange={(e) => handleStepModeToggle(e.target.checked)}\n          />\n          <span>Global Step Mode</span>\n        </label>\n        \n        {selectedThread && !localConfig.step_mode && (\n          <label className=\"control-toggle\">\n            <input\n              type=\"checkbox\"\n              checked={localConfig.step_mode_threads.includes(selectedThread)}\n              onChange={(e) => handleThreadStepMode(e.target.checked)}\n            />\n            <span>Step Mode for Current Thread</span>\n          </label>\n        )}\n      </div>\n\n      {pausedTasks.length > 0 && (\n        <div className=\"control-section paused-tasks\">\n          <h4>Paused Tasks</h4>\n          {pausedTasks.map(task => (\n            <div key={task.task_id} className=\"paused-task\">\n              <span className=\"task-info\">\n                Task {task.task_id} - {task.agent_name}\n              </span>\n              <button \n                className=\"continue-button\"\n                onClick={() => onContinueTask(task.task_id)}\n              >\n                Continue ▶\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"control-info\">\n        {isThreadInStepMode && (\n          <div className=\"info-item step-active\">\n            ⏸️ Step mode active for this thread\n          </div>\n        )}\n        <div className=\"info-item\">\n          Press <kbd>Ctrl+Enter</kbd> to submit new task\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ControlPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}