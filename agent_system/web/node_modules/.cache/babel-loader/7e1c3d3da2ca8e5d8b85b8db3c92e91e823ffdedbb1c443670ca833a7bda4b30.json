{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/system.petter.ai/agent_system/web/src/components/MessageStream.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageStream = ({\n  messages,\n  threadId\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const containerRef = useRef(null);\n  const autoScrollEnabled = useRef(true);\n  const scrollToBottom = () => {\n    if (autoScrollEnabled.current) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container) {\n      const isAtBottom = container.scrollHeight - container.scrollTop === container.clientHeight;\n      autoScrollEnabled.current = isAtBottom;\n    }\n  };\n  const getMessageClass = message => {\n    const baseClass = 'message';\n    switch (message.type) {\n      case 'agent_thinking':\n        return `${baseClass} message-thinking`;\n      case 'agent_tool_call':\n        return `${baseClass} message-tool-call`;\n      case 'agent_tool_result':\n        return `${baseClass} message-tool-result`;\n      case 'agent_error':\n        return `${baseClass} message-error`;\n      case 'system_message':\n        return `${baseClass} message-system`;\n      case 'user_message':\n        return `${baseClass} message-user`;\n      case 'step_mode_pause':\n        return `${baseClass} message-pause`;\n      default:\n        return baseClass;\n    }\n  };\n  const formatToolCall = content => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-call\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-name\",\n        children: [\"\\uD83D\\uDD27 \", content.tool_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"tool-input\",\n        children: JSON.stringify(content.tool_input, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  const formatToolResult = content => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tool-status ${content.success ? 'success' : 'error'}`,\n        children: [content.success ? '✓' : '✗', \" Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"tool-output\",\n        children: typeof content.tool_output === 'string' ? content.tool_output : JSON.stringify(content.tool_output, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMessageContent = message => {\n    switch (message.type) {\n      case 'agent_tool_call':\n        return formatToolCall(message.content);\n      case 'agent_tool_result':\n        return formatToolResult(message.content);\n      case 'agent_thinking':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thinking\",\n          children: [\"\\uD83D\\uDCAD \", message.content.thought]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this);\n      case 'step_mode_pause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pause-message\",\n          children: [\"\\u23F8\\uFE0F \", message.content.reason, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pause-info\",\n            children: \"Waiting for continue command...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      case 'agent_error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u274C Error: \", message.content.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this);\n      case 'agent_started':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-started\",\n          children: [\"\\uD83D\\uDE80 Agent started: \", message.content.instruction, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-status\",\n            children: [\"Status: \", message.content.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message.content.message || message.content.thought || message.content.instruction || JSON.stringify(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-stream\",\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [messages.filter(m => m.tree_id === threadId).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getMessageClass(message),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-agent\",\n          children: message.agent_name || 'System'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-time\",\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: renderMessageContent(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, `${message.task_id}-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageStream, \"7P/8tmSiv6LHregq3K5gjd4CSlw=\");\n_c = MessageStream;\nexport default MessageStream;\nvar _c;\n$RefreshReg$(_c, \"MessageStream\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MessageStream","messages","threadId","_s","messagesEndRef","containerRef","autoScrollEnabled","scrollToBottom","current","_messagesEndRef$curre","scrollIntoView","behavior","handleScroll","container","isAtBottom","scrollHeight","scrollTop","clientHeight","getMessageClass","message","baseClass","type","formatToolCall","content","className","children","tool_name","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","tool_input","formatToolResult","success","tool_output","renderMessageContent","thought","reason","error","instruction","status","ref","onScroll","filter","m","tree_id","map","index","agent_name","Date","timestamp","toLocaleTimeString","task_id","_c","$RefreshReg$"],"sources":["/home/ubuntu/system.petter.ai/agent_system/web/src/components/MessageStream.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst MessageStream = ({ messages, threadId }) => {\n  const messagesEndRef = useRef(null);\n  const containerRef = useRef(null);\n  const autoScrollEnabled = useRef(true);\n\n  const scrollToBottom = () => {\n    if (autoScrollEnabled.current) {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container) {\n      const isAtBottom = container.scrollHeight - container.scrollTop === container.clientHeight;\n      autoScrollEnabled.current = isAtBottom;\n    }\n  };\n\n  const getMessageClass = (message) => {\n    const baseClass = 'message';\n    switch (message.type) {\n      case 'agent_thinking':\n        return `${baseClass} message-thinking`;\n      case 'agent_tool_call':\n        return `${baseClass} message-tool-call`;\n      case 'agent_tool_result':\n        return `${baseClass} message-tool-result`;\n      case 'agent_error':\n        return `${baseClass} message-error`;\n      case 'system_message':\n        return `${baseClass} message-system`;\n      case 'user_message':\n        return `${baseClass} message-user`;\n      case 'step_mode_pause':\n        return `${baseClass} message-pause`;\n      default:\n        return baseClass;\n    }\n  };\n\n  const formatToolCall = (content) => {\n    return (\n      <div className=\"tool-call\">\n        <div className=\"tool-name\">🔧 {content.tool_name}</div>\n        <pre className=\"tool-input\">{JSON.stringify(content.tool_input, null, 2)}</pre>\n      </div>\n    );\n  };\n\n  const formatToolResult = (content) => {\n    return (\n      <div className=\"tool-result\">\n        <div className={`tool-status ${content.success ? 'success' : 'error'}`}>\n          {content.success ? '✓' : '✗'} Result\n        </div>\n        <pre className=\"tool-output\">{\n          typeof content.tool_output === 'string' \n            ? content.tool_output \n            : JSON.stringify(content.tool_output, null, 2)\n        }</pre>\n      </div>\n    );\n  };\n\n  const renderMessageContent = (message) => {\n    switch (message.type) {\n      case 'agent_tool_call':\n        return formatToolCall(message.content);\n      case 'agent_tool_result':\n        return formatToolResult(message.content);\n      case 'agent_thinking':\n        return <div className=\"thinking\">💭 {message.content.thought}</div>;\n      case 'step_mode_pause':\n        return (\n          <div className=\"pause-message\">\n            ⏸️ {message.content.reason}\n            <div className=\"pause-info\">Waiting for continue command...</div>\n          </div>\n        );\n      case 'agent_error':\n        return (\n          <div className=\"error-message\">\n            ❌ Error: {message.content.error}\n          </div>\n        );\n      case 'agent_started':\n        return (\n          <div className=\"agent-started\">\n            🚀 Agent started: {message.content.instruction}\n            <div className=\"agent-status\">Status: {message.content.status}</div>\n          </div>\n        );\n      default:\n        return <div>{message.content.message || message.content.thought || message.content.instruction || JSON.stringify(message.content)}</div>;\n    }\n  };\n\n  return (\n    <div className=\"message-stream\" ref={containerRef} onScroll={handleScroll}>\n      {messages.filter(m => m.tree_id === threadId).map((message, index) => (\n        <div key={`${message.task_id}-${index}`} className={getMessageClass(message)}>\n          <div className=\"message-header\">\n            <span className=\"message-agent\">{message.agent_name || 'System'}</span>\n            <span className=\"message-time\">{new Date(message.timestamp).toLocaleTimeString()}</span>\n          </div>\n          <div className=\"message-content\">\n            {renderMessageContent(message)}\n          </div>\n        </div>\n      ))}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageStream;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}