{"ast":null,"code":"var _jsxFileName = \"/code/personal/the-system/agent_system/web/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ThreadList from './components/ThreadList';\nimport MessageStream from './components/MessageStream';\nimport TaskTreeVisualization from './components/TaskTreeVisualization';\nimport ControlPanel from './components/ControlPanel';\nimport AgentBrowser from './components/AgentBrowser';\nimport ToolBrowser from './components/ToolBrowser';\nimport DocumentBrowser from './components/DocumentBrowser';\nimport InitializationPage from './components/InitializationPage';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Get API base URL from environment or use production default\nconst API_BASE_URL = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? 'http://localhost:8000' : `${window.location.protocol}//${window.location.hostname}/api`);\nconst WS_URL = process.env.REACT_APP_WS_URL || (window.location.hostname === 'localhost' ? 'ws://localhost:8000/ws' : `${window.location.protocol === 'https:' ? 'wss:' : 'ws:'}//${window.location.hostname}/api/ws`);\nconst App = () => {\n  _s();\n  // System state\n  const [systemState, setSystemState] = useState('loading');\n  const [currentView, setCurrentView] = useState('tasks');\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n\n  // Task and thread state\n  const [threads, setThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [showCompleted, setShowCompleted] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [pausedTasks, setPausedTasks] = useState([]);\n\n  // UI state\n  const [showTaskTree, setShowTaskTree] = useState(false);\n  const [instruction, setInstruction] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // System configuration\n  const [systemConfig, setSystemConfig] = useState({\n    max_parallel_tasks: 3,\n    step_mode: false,\n    step_mode_threads: [],\n    manual_step_mode: false,\n    max_concurrent_agents: 3\n  });\n\n  // WebSocket message handler\n  const handleWebSocketMessage = useCallback(message => {\n    switch (message.type) {\n      case 'system_state_change':\n        if (message.state) {\n          setSystemState(message.state);\n          if (message.state === 'ready') {\n            fetchThreads();\n            fetchSystemConfig();\n          }\n        }\n        break;\n      case 'agent_started':\n      case 'agent_thinking':\n      case 'agent_tool_call':\n      case 'agent_tool_result':\n      case 'agent_completed':\n      case 'agent_error':\n      case 'step_mode_pause':\n        setMessages(prev => [...prev, message]);\n        if (message.type === 'step_mode_pause') {\n          setPausedTasks(prev => [...prev, message]);\n        }\n        break;\n      case 'task_created':\n      case 'task_completed':\n      case 'thread_update':\n        fetchThreads();\n        break;\n      case 'config_updated':\n        if (message.config) {\n          setSystemConfig(message.config);\n        }\n        break;\n      case 'step_continued':\n        if (message.task_id) {\n          setPausedTasks(prev => prev.filter(t => t.task_id !== message.task_id));\n        }\n        break;\n    }\n  }, []);\n\n  // WebSocket hook\n  const {\n    sendMessage\n  } = useWebSocket({\n    url: WS_URL,\n    onMessage: handleWebSocketMessage,\n    onConnectionStatusChange: setConnectionStatus\n  });\n\n  // Effects\n  useEffect(() => {\n    checkSystemState();\n    fetchThreads();\n    fetchSystemConfig();\n  }, []);\n\n  // API functions\n  const checkSystemState = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/state`);\n      const data = await response.json();\n      setSystemState(data.state);\n    } catch (error) {\n      console.error('Error checking system state:', error);\n      setSystemState('uninitialized');\n    }\n  };\n  const fetchThreads = async () => {\n    try {\n      var _data$all_trees;\n      const response = await fetch(`${API_BASE_URL}/tasks/all`);\n      const data = await response.json();\n      setThreads(data.all_trees || []);\n\n      // Auto-select first active thread if none selected\n      if (!selectedThread && ((_data$all_trees = data.all_trees) === null || _data$all_trees === void 0 ? void 0 : _data$all_trees.length) > 0) {\n        const activeThread = data.all_trees.find(t => t.has_running_tasks);\n        if (activeThread) {\n          setSelectedThread(activeThread.tree_id);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching threads:', error);\n    }\n  };\n  const loadThreadMessages = async threadId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/tree/${threadId}/messages`);\n      const data = await response.json();\n      setMessages(prev => {\n        const filtered = prev.filter(m => m.tree_id !== threadId);\n        return [...filtered, ...data.messages];\n      });\n    } catch (error) {\n      console.error('Error loading thread messages:', error);\n    }\n  };\n  const fetchSystemConfig = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/config`);\n      const config = await response.json();\n      setSystemConfig(config);\n    } catch (error) {\n      console.error('Error fetching config:', error);\n    }\n  };\n  const updateSystemConfig = async newConfig => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/config`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newConfig)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setSystemConfig(result.config);\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n\n  // Event handlers\n  const handleInitialize = async settings => {\n    try {\n      await updateSystemConfig({\n        ...systemConfig,\n        manual_step_mode: settings.manualStepMode,\n        max_concurrent_agents: settings.maxConcurrentAgents,\n        step_mode: settings.manualStepMode,\n        step_mode_threads: ['*']\n      });\n      const response = await fetch(`${API_BASE_URL}/system/initialize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n      });\n      if (response.ok) {\n        setSystemState('initializing');\n      }\n    } catch (error) {\n      console.error('Error starting initialization:', error);\n    }\n  };\n  const submitTask = async e => {\n    e.preventDefault();\n    if (!instruction.trim() || isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          instruction\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setInstruction('');\n        setSelectedThread(result.tree_id);\n        fetchThreads();\n      }\n    } catch (error) {\n      console.error('Error submitting task:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const continueTask = taskId => {\n    sendMessage({\n      type: 'continue_step',\n      task_id: taskId\n    });\n  };\n  const handleSelectThread = (threadId, showComp) => {\n    setSelectedThread(threadId);\n    if (showComp !== undefined) {\n      setShowCompleted(showComp);\n    }\n    if (threadId) {\n      loadThreadMessages(threadId);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && e.ctrlKey) {\n      submitTask(e);\n    }\n  };\n\n  // Render different states\n  if (systemState === 'uninitialized') {\n    return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(InitializationPage, {\n        onInitialize: handleInitialize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  if (systemState === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Checking system state...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n  if (systemState === 'initializing') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83E\\uDD16 Agent System - Initializing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initialization-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"System Initialization in Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The system is executing initialization tasks. You can monitor progress below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"With manual step mode enabled, approve each agent execution in the Tasks view.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-tasks-button\",\n            onClick: () => window.location.reload(),\n            children: \"View Task Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83E\\uDD16 Self-Improving Agent System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"app-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-button ${currentView === 'tasks' ? 'active' : ''}`,\n            onClick: () => setCurrentView('tasks'),\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-button ${currentView === 'agents' ? 'active' : ''}`,\n            onClick: () => setCurrentView('agents'),\n            children: \"Agents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-button ${currentView === 'tools' ? 'active' : ''}`,\n            onClick: () => setCurrentView('tools'),\n            children: \"Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-button ${currentView === 'documents' ? 'active' : ''}`,\n            onClick: () => setCurrentView('documents'),\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${connectionStatus}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), connectionStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-body\",\n        children: [currentView === 'tasks' && /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error loading tasks view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 38\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: /*#__PURE__*/_jsxDEV(ThreadList, {\n              threads: threads,\n              selectedThread: selectedThread,\n              onSelectThread: handleSelectThread,\n              showCompleted: showCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-input-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitTask,\n                className: \"task-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: instruction,\n                  onChange: e => setInstruction(e.target.value),\n                  onKeyDown: handleKeyDown,\n                  placeholder: \"Enter a task instruction...\",\n                  className: \"task-input\",\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: !instruction.trim() || isSubmitting,\n                  className: \"submit-button\",\n                  children: isSubmitting ? 'Submitting...' : 'Submit Task'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), selectedThread && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `toggle-button ${!showTaskTree ? 'active' : ''}`,\n                  onClick: () => setShowTaskTree(false),\n                  children: \"\\uD83D\\uDCDC Messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `toggle-button ${showTaskTree ? 'active' : ''}`,\n                  onClick: () => setShowTaskTree(true),\n                  children: \"\\uD83D\\uDCCA Tree View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), selectedThread ? showTaskTree ? /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error loading task tree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 46\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(TaskTreeVisualization, {\n                threadId: selectedThread,\n                apiBaseUrl: API_BASE_URL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error loading messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 46\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(MessageStream, {\n                messages: messages,\n                threadId: selectedThread\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-thread-selected\",\n              children: \"Select a thread or submit a new task to get started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-sidebar\",\n            children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error loading control panel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 42\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ControlPanel, {\n                systemConfig: systemConfig,\n                onUpdateConfig: updateSystemConfig,\n                selectedThread: selectedThread,\n                pausedTasks: pausedTasks.filter(t => t.tree_id === selectedThread),\n                onContinueTask: continueTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), currentView === 'agents' && /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error loading agents view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 38\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(AgentBrowser, {\n            apiBaseUrl: API_BASE_URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), currentView === 'tools' && /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error loading tools view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 38\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ToolBrowser, {\n            apiBaseUrl: API_BASE_URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), currentView === 'documents' && /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error loading documents view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 38\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(DocumentBrowser, {\n            apiBaseUrl: API_BASE_URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZoDz2CC5NKEpTbcxjljrRPX7Ns0=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ErrorBoundary","ThreadList","MessageStream","TaskTreeVisualization","ControlPanel","AgentBrowser","ToolBrowser","DocumentBrowser","InitializationPage","useWebSocket","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","window","location","hostname","protocol","WS_URL","REACT_APP_WS_URL","App","_s","systemState","setSystemState","currentView","setCurrentView","connectionStatus","setConnectionStatus","threads","setThreads","selectedThread","setSelectedThread","showCompleted","setShowCompleted","messages","setMessages","pausedTasks","setPausedTasks","showTaskTree","setShowTaskTree","instruction","setInstruction","isSubmitting","setIsSubmitting","systemConfig","setSystemConfig","max_parallel_tasks","step_mode","step_mode_threads","manual_step_mode","max_concurrent_agents","handleWebSocketMessage","message","type","state","fetchThreads","fetchSystemConfig","prev","config","task_id","filter","t","sendMessage","url","onMessage","onConnectionStatusChange","checkSystemState","response","fetch","data","json","error","console","_data$all_trees","all_trees","length","activeThread","find","has_running_tasks","tree_id","loadThreadMessages","threadId","filtered","m","updateSystemConfig","newConfig","method","headers","body","JSON","stringify","ok","result","handleInitialize","settings","manualStepMode","maxConcurrentAgents","submitTask","e","preventDefault","trim","continueTask","taskId","handleSelectThread","showComp","undefined","handleKeyDown","key","ctrlKey","children","onInitialize","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","reload","fallback","onSelectThread","onSubmit","value","onChange","target","onKeyDown","placeholder","disabled","apiBaseUrl","onUpdateConfig","onContinueTask","_c","$RefreshReg$"],"sources":["/code/personal/the-system/agent_system/web/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ThreadList from './components/ThreadList';\nimport MessageStream from './components/MessageStream';\nimport TaskTreeVisualization from './components/TaskTreeVisualization';\nimport ControlPanel from './components/ControlPanel';\nimport AgentBrowser from './components/AgentBrowser';\nimport ToolBrowser from './components/ToolBrowser';\nimport DocumentBrowser from './components/DocumentBrowser';\nimport InitializationPage from './components/InitializationPage';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport {\n  SystemState,\n  CurrentView,\n  ConnectionStatus,\n  SystemConfig,\n  TaskThread,\n  Message,\n  PausedTask,\n  WebSocketMessage,\n  InitializationSettings,\n  TasksResponse,\n  TaskSubmissionResponse,\n  ThreadMessagesResponse\n} from './types';\n\n// Get API base URL from environment or use production default\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \n  (window.location.hostname === 'localhost' ? 'http://localhost:8000' : `${window.location.protocol}//${window.location.hostname}/api`);\nconst WS_URL = process.env.REACT_APP_WS_URL || \n  (window.location.hostname === 'localhost' ? 'ws://localhost:8000/ws' : `${window.location.protocol === 'https:' ? 'wss:' : 'ws:'}//${window.location.hostname}/api/ws`);\n\nconst App: React.FC = () => {\n  // System state\n  const [systemState, setSystemState] = useState<SystemState>('loading');\n  const [currentView, setCurrentView] = useState<CurrentView>('tasks');\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>('connecting');\n  \n  // Task and thread state\n  const [threads, setThreads] = useState<TaskThread[]>([]);\n  const [selectedThread, setSelectedThread] = useState<string | null>(null);\n  const [showCompleted, setShowCompleted] = useState<boolean>(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [pausedTasks, setPausedTasks] = useState<PausedTask[]>([]);\n  \n  // UI state\n  const [showTaskTree, setShowTaskTree] = useState<boolean>(false);\n  const [instruction, setInstruction] = useState<string>('');\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  \n  // System configuration\n  const [systemConfig, setSystemConfig] = useState<SystemConfig>({\n    max_parallel_tasks: 3,\n    step_mode: false,\n    step_mode_threads: [],\n    manual_step_mode: false,\n    max_concurrent_agents: 3\n  });\n\n  // WebSocket message handler\n  const handleWebSocketMessage = useCallback((message: WebSocketMessage) => {\n    switch (message.type) {\n      case 'system_state_change':\n        if (message.state) {\n          setSystemState(message.state);\n          if (message.state === 'ready') {\n            fetchThreads();\n            fetchSystemConfig();\n          }\n        }\n        break;\n        \n      case 'agent_started':\n      case 'agent_thinking':\n      case 'agent_tool_call':\n      case 'agent_tool_result':\n      case 'agent_completed':\n      case 'agent_error':\n      case 'step_mode_pause':\n        setMessages(prev => [...prev, message as Message]);\n        \n        if (message.type === 'step_mode_pause') {\n          setPausedTasks(prev => [...prev, message as PausedTask]);\n        }\n        break;\n        \n      case 'task_created':\n      case 'task_completed':\n      case 'thread_update':\n        fetchThreads();\n        break;\n        \n      case 'config_updated':\n        if (message.config) {\n          setSystemConfig(message.config);\n        }\n        break;\n        \n      case 'step_continued':\n        if (message.task_id) {\n          setPausedTasks(prev => prev.filter(t => t.task_id !== message.task_id));\n        }\n        break;\n    }\n  }, []);\n\n  // WebSocket hook\n  const { sendMessage } = useWebSocket({\n    url: WS_URL,\n    onMessage: handleWebSocketMessage,\n    onConnectionStatusChange: setConnectionStatus\n  });\n\n  // Effects\n  useEffect(() => {\n    checkSystemState();\n    fetchThreads();\n    fetchSystemConfig();\n  }, []);\n\n  // API functions\n  const checkSystemState = async (): Promise<void> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/state`);\n      const data = await response.json();\n      setSystemState(data.state);\n    } catch (error) {\n      console.error('Error checking system state:', error);\n      setSystemState('uninitialized');\n    }\n  };\n\n  const fetchThreads = async (): Promise<void> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/all`);\n      const data: TasksResponse = await response.json();\n      setThreads(data.all_trees || []);\n      \n      // Auto-select first active thread if none selected\n      if (!selectedThread && data.all_trees?.length > 0) {\n        const activeThread = data.all_trees.find(t => t.has_running_tasks);\n        if (activeThread) {\n          setSelectedThread(activeThread.tree_id);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching threads:', error);\n    }\n  };\n\n  const loadThreadMessages = async (threadId: string): Promise<void> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/tree/${threadId}/messages`);\n      const data: ThreadMessagesResponse = await response.json();\n      \n      setMessages(prev => {\n        const filtered = prev.filter(m => m.tree_id !== threadId);\n        return [...filtered, ...data.messages];\n      });\n    } catch (error) {\n      console.error('Error loading thread messages:', error);\n    }\n  };\n\n  const fetchSystemConfig = async (): Promise<void> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/config`);\n      const config = await response.json();\n      setSystemConfig(config);\n    } catch (error) {\n      console.error('Error fetching config:', error);\n    }\n  };\n\n  const updateSystemConfig = async (newConfig: SystemConfig): Promise<void> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/system/config`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newConfig)\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        setSystemConfig(result.config);\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n\n  // Event handlers\n  const handleInitialize = async (settings: InitializationSettings): Promise<void> => {\n    try {\n      await updateSystemConfig({\n        ...systemConfig,\n        manual_step_mode: settings.manualStepMode,\n        max_concurrent_agents: settings.maxConcurrentAgents,\n        step_mode: settings.manualStepMode,\n        step_mode_threads: ['*']\n      });\n\n      const response = await fetch(`${API_BASE_URL}/system/initialize`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(settings)\n      });\n\n      if (response.ok) {\n        setSystemState('initializing');\n      }\n    } catch (error) {\n      console.error('Error starting initialization:', error);\n    }\n  };\n\n  const submitTask = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    if (!instruction.trim() || isSubmitting) return;\n\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ instruction })\n      });\n\n      if (response.ok) {\n        const result: TaskSubmissionResponse = await response.json();\n        setInstruction('');\n        setSelectedThread(result.tree_id);\n        fetchThreads();\n      }\n    } catch (error) {\n      console.error('Error submitting task:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const continueTask = (taskId: number): void => {\n    sendMessage({\n      type: 'continue_step',\n      task_id: taskId\n    });\n  };\n\n  const handleSelectThread = (threadId: string | null, showComp?: boolean): void => {\n    setSelectedThread(threadId);\n    if (showComp !== undefined) {\n      setShowCompleted(showComp);\n    }\n    if (threadId) {\n      loadThreadMessages(threadId);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent): void => {\n    if (e.key === 'Enter' && e.ctrlKey) {\n      submitTask(e as any);\n    }\n  };\n\n  // Render different states\n  if (systemState === 'uninitialized') {\n    return (\n      <ErrorBoundary>\n        <InitializationPage onInitialize={handleInitialize} />\n      </ErrorBoundary>\n    );\n  }\n\n  if (systemState === 'loading') {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Checking system state...</p>\n      </div>\n    );\n  }\n\n  if (systemState === 'initializing') {\n    return (\n      <div className=\"app\">\n        <div className=\"app-header\">\n          <h1>🤖 Agent System - Initializing</h1>\n        </div>\n        <div className=\"app-body\">\n          <div className=\"initialization-progress\">\n            <h2>System Initialization in Progress</h2>\n            <p>The system is executing initialization tasks. You can monitor progress below.</p>\n            <p>With manual step mode enabled, approve each agent execution in the Tasks view.</p>\n            <button \n              className=\"view-tasks-button\"\n              onClick={() => window.location.reload()}\n            >\n              View Task Progress\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div className=\"app\">\n        <div className=\"app-header\">\n          <h1>🤖 Self-Improving Agent System</h1>\n          <nav className=\"app-nav\">\n            <button \n              className={`nav-button ${currentView === 'tasks' ? 'active' : ''}`}\n              onClick={() => setCurrentView('tasks')}\n            >\n              Tasks\n            </button>\n            <button \n              className={`nav-button ${currentView === 'agents' ? 'active' : ''}`}\n              onClick={() => setCurrentView('agents')}\n            >\n              Agents\n            </button>\n            <button \n              className={`nav-button ${currentView === 'tools' ? 'active' : ''}`}\n              onClick={() => setCurrentView('tools')}\n            >\n              Tools\n            </button>\n            <button \n              className={`nav-button ${currentView === 'documents' ? 'active' : ''}`}\n              onClick={() => setCurrentView('documents')}\n            >\n              Documents\n            </button>\n          </nav>\n          <div className=\"connection-status\">\n            <span className={`status-indicator ${connectionStatus}`}></span>\n            {connectionStatus}\n          </div>\n        </div>\n        \n        <div className=\"app-body\">\n          {currentView === 'tasks' && (\n            <ErrorBoundary fallback={<div>Error loading tasks view</div>}>\n              <div className=\"sidebar\">\n                <ThreadList\n                  threads={threads}\n                  selectedThread={selectedThread}\n                  onSelectThread={handleSelectThread}\n                  showCompleted={showCompleted}\n                />\n              </div>\n              \n              <div className=\"main-content\">\n                <div className=\"task-input-section\">\n                  <form onSubmit={submitTask} className=\"task-form\">\n                    <input\n                      type=\"text\"\n                      value={instruction}\n                      onChange={(e) => setInstruction(e.target.value)}\n                      onKeyDown={handleKeyDown}\n                      placeholder=\"Enter a task instruction...\"\n                      className=\"task-input\"\n                      disabled={isSubmitting}\n                    />\n                    <button \n                      type=\"submit\" \n                      disabled={!instruction.trim() || isSubmitting}\n                      className=\"submit-button\"\n                    >\n                      {isSubmitting ? 'Submitting...' : 'Submit Task'}\n                    </button>\n                  </form>\n                  \n                  {selectedThread && (\n                    <div className=\"view-toggle\">\n                      <button\n                        className={`toggle-button ${!showTaskTree ? 'active' : ''}`}\n                        onClick={() => setShowTaskTree(false)}\n                      >\n                        📜 Messages\n                      </button>\n                      <button\n                        className={`toggle-button ${showTaskTree ? 'active' : ''}`}\n                        onClick={() => setShowTaskTree(true)}\n                      >\n                        📊 Tree View\n                      </button>\n                    </div>\n                  )}\n                </div>\n                \n                {selectedThread ? (\n                  showTaskTree ? (\n                    <ErrorBoundary fallback={<div>Error loading task tree</div>}>\n                      <TaskTreeVisualization\n                        threadId={selectedThread}\n                        apiBaseUrl={API_BASE_URL}\n                      />\n                    </ErrorBoundary>\n                  ) : (\n                    <ErrorBoundary fallback={<div>Error loading messages</div>}>\n                      <MessageStream\n                        messages={messages}\n                        threadId={selectedThread}\n                      />\n                    </ErrorBoundary>\n                  )\n                ) : (\n                  <div className=\"no-thread-selected\">\n                    Select a thread or submit a new task to get started\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"control-sidebar\">\n                <ErrorBoundary fallback={<div>Error loading control panel</div>}>\n                  <ControlPanel\n                    systemConfig={systemConfig}\n                    onUpdateConfig={updateSystemConfig}\n                    selectedThread={selectedThread}\n                    pausedTasks={pausedTasks.filter(t => t.tree_id === selectedThread)}\n                    onContinueTask={continueTask}\n                  />\n                </ErrorBoundary>\n              </div>\n            </ErrorBoundary>\n          )}\n          \n          {currentView === 'agents' && (\n            <ErrorBoundary fallback={<div>Error loading agents view</div>}>\n              <AgentBrowser apiBaseUrl={API_BASE_URL} />\n            </ErrorBoundary>\n          )}\n          \n          {currentView === 'tools' && (\n            <ErrorBoundary fallback={<div>Error loading tools view</div>}>\n              <ToolBrowser apiBaseUrl={API_BASE_URL} />\n            </ErrorBoundary>\n          )}\n          \n          {currentView === 'documents' && (\n            <ErrorBoundary fallback={<div>Error loading documents view</div>}>\n              <DocumentBrowser apiBaseUrl={API_BASE_URL} />\n            </ErrorBoundary>\n          )}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}