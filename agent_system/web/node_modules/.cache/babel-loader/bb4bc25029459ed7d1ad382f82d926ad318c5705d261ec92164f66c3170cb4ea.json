{"ast":null,"code":"import _objectSpread from \"/code/personal/the-system/agent_system/web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst regex = /on[A-Z]/;\nfunction wrapper(func, args) {\n  return event => func(event, ...args);\n}\n\n// Wraps any event handlers passed in as props with a function that passes additional arguments\nfunction wrapHandlers(props) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  const handlers = Object.keys(props).filter(propName => regex.test(propName) && typeof props[propName] === 'function');\n  const wrappedHandlers = handlers.reduce((acc, handler) => {\n    acc[handler] = wrapper(props[handler], args);\n    return acc;\n  }, {});\n  return _objectSpread(_objectSpread({}, props), wrappedHandlers);\n}\nexport { wrapHandlers as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}