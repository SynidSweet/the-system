{"ast":null,"code":"var _jsxFileName = \"/code/personal/the-system/agent_system/web/src/components/MessageStream.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageStream = ({\n  messages,\n  threadId\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const containerRef = useRef(null);\n  const autoScrollEnabled = useRef(true);\n  const scrollToBottom = () => {\n    if (autoScrollEnabled.current && messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container) {\n      const isAtBottom = Math.abs(container.scrollHeight - container.scrollTop - container.clientHeight) < 5; // Small threshold for floating point precision\n      autoScrollEnabled.current = isAtBottom;\n    }\n  };\n  const getMessageClass = message => {\n    const baseClass = 'message';\n    switch (message.type) {\n      case 'agent_thinking':\n        return `${baseClass} message-thinking`;\n      case 'agent_tool_call':\n        return `${baseClass} message-tool-call`;\n      case 'agent_tool_result':\n        return `${baseClass} message-tool-result`;\n      case 'agent_error':\n        return `${baseClass} message-error`;\n      case 'system_message':\n        return `${baseClass} message-system`;\n      case 'user_message':\n        return `${baseClass} message-user`;\n      case 'step_mode_pause':\n        return `${baseClass} message-pause`;\n      case 'agent_started':\n        return `${baseClass} message-started`;\n      case 'agent_completed':\n        return `${baseClass} message-completed`;\n      default:\n        return baseClass;\n    }\n  };\n  const formatToolCall = content => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-call\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-name\",\n        children: [\"\\uD83D\\uDD27 \", content.tool_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), content.tool_input && /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"tool-input\",\n        children: JSON.stringify(content.tool_input, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  const formatToolResult = content => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tool-status ${content.success ? 'success' : 'error'}`,\n        children: [content.success ? '✓' : '✗', \" Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), content.tool_output && /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"tool-output\",\n        children: typeof content.tool_output === 'string' ? content.tool_output : JSON.stringify(content.tool_output, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMessageContent = message => {\n    const {\n      content\n    } = message;\n    switch (message.type) {\n      case 'agent_tool_call':\n        return formatToolCall(content);\n      case 'agent_tool_result':\n        return formatToolResult(content);\n      case 'agent_thinking':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thinking\",\n          children: [\"\\uD83D\\uDCAD \", content.thought || content.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      case 'step_mode_pause':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pause-message\",\n          children: [\"\\u23F8\\uFE0F \", content.reason || content.message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pause-info\",\n            children: \"Waiting for continue command...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      case 'agent_error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u274C Error: \", content.error || content.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this);\n      case 'agent_started':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-started\",\n          children: [\"\\uD83D\\uDE80 Agent started: \", content.instruction || content.message, content.status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-status\",\n            children: [\"Status: \", content.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this);\n      case 'agent_completed':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-completed\",\n          children: [\"\\u2705 Agent completed: \", content.message || content.instruction, content.status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-status\",\n            children: [\"Final Status: \", content.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      default:\n        const displayText = content.message || content.thought || content.instruction || (typeof content === 'string' ? content : JSON.stringify(content));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: displayText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const filteredMessages = messages.filter(m => m.tree_id === threadId);\n  if (filteredMessages.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-stream empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet for this thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-hint\",\n          children: \"Messages will appear here as agents work on tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-stream\",\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [filteredMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getMessageClass(message),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-agent\",\n          children: message.agent_name || 'System'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-time\",\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-type\",\n          children: message.type.replace('agent_', '').replace('_', ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: renderMessageContent(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, `${message.task_id}-${message.timestamp}-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageStream, \"7P/8tmSiv6LHregq3K5gjd4CSlw=\");\n_c = MessageStream;\nexport default MessageStream;\nvar _c;\n$RefreshReg$(_c, \"MessageStream\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MessageStream","messages","threadId","_s","messagesEndRef","containerRef","autoScrollEnabled","scrollToBottom","current","scrollIntoView","behavior","handleScroll","container","isAtBottom","Math","abs","scrollHeight","scrollTop","clientHeight","getMessageClass","message","baseClass","type","formatToolCall","content","className","children","tool_name","fileName","_jsxFileName","lineNumber","columnNumber","tool_input","JSON","stringify","formatToolResult","success","tool_output","renderMessageContent","thought","reason","error","instruction","status","displayText","filteredMessages","filter","m","tree_id","length","ref","onScroll","map","index","agent_name","Date","timestamp","toLocaleTimeString","replace","task_id","_c","$RefreshReg$"],"sources":["/code/personal/the-system/agent_system/web/src/components/MessageStream.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { MessageStreamProps, Message, MessageContent } from '../types';\n\nconst MessageStream: React.FC<MessageStreamProps> = ({ messages, threadId }) => {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const autoScrollEnabled = useRef<boolean>(true);\n\n  const scrollToBottom = (): void => {\n    if (autoScrollEnabled.current && messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleScroll = (): void => {\n    const container = containerRef.current;\n    if (container) {\n      const isAtBottom = Math.abs(\n        container.scrollHeight - container.scrollTop - container.clientHeight\n      ) < 5; // Small threshold for floating point precision\n      autoScrollEnabled.current = isAtBottom;\n    }\n  };\n\n  const getMessageClass = (message: Message): string => {\n    const baseClass = 'message';\n    switch (message.type) {\n      case 'agent_thinking':\n        return `${baseClass} message-thinking`;\n      case 'agent_tool_call':\n        return `${baseClass} message-tool-call`;\n      case 'agent_tool_result':\n        return `${baseClass} message-tool-result`;\n      case 'agent_error':\n        return `${baseClass} message-error`;\n      case 'system_message':\n        return `${baseClass} message-system`;\n      case 'user_message':\n        return `${baseClass} message-user`;\n      case 'step_mode_pause':\n        return `${baseClass} message-pause`;\n      case 'agent_started':\n        return `${baseClass} message-started`;\n      case 'agent_completed':\n        return `${baseClass} message-completed`;\n      default:\n        return baseClass;\n    }\n  };\n\n  const formatToolCall = (content: MessageContent): React.JSX.Element => {\n    return (\n      <div className=\"tool-call\">\n        <div className=\"tool-name\">🔧 {content.tool_name}</div>\n        {content.tool_input && (\n          <pre className=\"tool-input\">\n            {JSON.stringify(content.tool_input, null, 2)}\n          </pre>\n        )}\n      </div>\n    );\n  };\n\n  const formatToolResult = (content: MessageContent): React.JSX.Element => {\n    return (\n      <div className=\"tool-result\">\n        <div className={`tool-status ${content.success ? 'success' : 'error'}`}>\n          {content.success ? '✓' : '✗'} Result\n        </div>\n        {content.tool_output && (\n          <pre className=\"tool-output\">\n            {typeof content.tool_output === 'string' \n              ? content.tool_output \n              : JSON.stringify(content.tool_output, null, 2)\n            }\n          </pre>\n        )}\n      </div>\n    );\n  };\n\n  const renderMessageContent = (message: Message): React.JSX.Element => {\n    const { content } = message;\n    \n    switch (message.type) {\n      case 'agent_tool_call':\n        return formatToolCall(content);\n        \n      case 'agent_tool_result':\n        return formatToolResult(content);\n        \n      case 'agent_thinking':\n        return (\n          <div className=\"thinking\">\n            💭 {content.thought || content.message}\n          </div>\n        );\n        \n      case 'step_mode_pause':\n        return (\n          <div className=\"pause-message\">\n            ⏸️ {content.reason || content.message}\n            <div className=\"pause-info\">Waiting for continue command...</div>\n          </div>\n        );\n        \n      case 'agent_error':\n        return (\n          <div className=\"error-message\">\n            ❌ Error: {content.error || content.message}\n          </div>\n        );\n        \n      case 'agent_started':\n        return (\n          <div className=\"agent-started\">\n            🚀 Agent started: {content.instruction || content.message}\n            {content.status && (\n              <div className=\"agent-status\">Status: {content.status}</div>\n            )}\n          </div>\n        );\n        \n      case 'agent_completed':\n        return (\n          <div className=\"agent-completed\">\n            ✅ Agent completed: {content.message || content.instruction}\n            {content.status && (\n              <div className=\"agent-status\">Final Status: {content.status}</div>\n            )}\n          </div>\n        );\n        \n      default:\n        const displayText = content.message || \n                          content.thought || \n                          content.instruction || \n                          (typeof content === 'string' ? content : JSON.stringify(content));\n        \n        return <div className=\"message-text\">{displayText}</div>;\n    }\n  };\n\n  const filteredMessages = messages.filter(m => m.tree_id === threadId);\n\n  if (filteredMessages.length === 0) {\n    return (\n      <div className=\"message-stream empty\">\n        <div className=\"empty-state\">\n          <p>No messages yet for this thread</p>\n          <p className=\"empty-hint\">Messages will appear here as agents work on tasks</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"message-stream\" ref={containerRef} onScroll={handleScroll}>\n      {filteredMessages.map((message, index) => (\n        <div key={`${message.task_id}-${message.timestamp}-${index}`} className={getMessageClass(message)}>\n          <div className=\"message-header\">\n            <span className=\"message-agent\">\n              {message.agent_name || 'System'}\n            </span>\n            <span className=\"message-time\">\n              {new Date(message.timestamp).toLocaleTimeString()}\n            </span>\n            <span className=\"message-type\">\n              {message.type.replace('agent_', '').replace('_', ' ')}\n            </span>\n          </div>\n          <div className=\"message-content\">\n            {renderMessageContent(message)}\n          </div>\n        </div>\n      ))}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageStream;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}